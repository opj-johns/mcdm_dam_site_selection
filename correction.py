import pandas as pd
import numpy as np
from sklearn.preprocessing import MinMaxScaler

# Input data
data = [
    [29.00, 2.00, 0.08, 18.94, 8338.00, 15.98, 3.52, 0.10, 0.01, 226.95, 1.02],
    [33.00, 18.00, 0.24, 18.75, 12700.00, 17.45, 11.65, 1.29, 0.21, 214.26, 1.06],
    [71.00, 96.00, 0.60, 19.06, 8419.00, 10.80, 0.70, 0.11, 0.25, 6.02, 1.00],
    [50.00, 83.00, 0.88, 19.10, 652292.00, 13.32, 3.58, 3.63, 0.01, 36.19, 1.02],
    [40.00, 9.50, 0.26, 18.94, 9641.00, 15.98, 4.08, 1.69, 0.11, 60.24, 1.02],
    [46.00, 13.00, 0.07, 18.00, 8214.00, 19.57, 2.97, 5.11, 1.12, 0.13, 1.01],
    [18.00, 2.00, 0.08, 18.78, 30025.00, 12.29, 3.20, 2.75, 0.23, 0.05, 1.02],
    [64.00, 725.00, 20.00, 18.98, 5295.00, 17.02, 15.76, 2.90, 0.02, 23.57, 1.08],
    [100.00, 197.00, 0.50, 16.30, 16554.00, 10.47, 3.20, 6.35, 0.01, 41.94, 1.02],
    [85.00, 369.00, 1.90, 17.50, 18381.00, 12.15, 7.82, 0.16, 2.82, 21.81, 1.04],
    [20.00, 2.70, 0.08, 16.38, 1276.00, 11.52, 28.64, 16.80, 5.69, 0.01, 1.14],
    [20.00, 1.00, 0.29, 21.37, 20978.00, 3.73, 0.81, 0.90, 0.86, 12.05, 1.00],
    [26.00, 1.30, 0.02, 18.98, 7168.00, 17.19, 3.91, 0.33, 0.83, 16.21, 1.02],
    [17.00, 1.00, 0.03, 18.42, 6912.00, 19.19, 2.60, 3.24, 0.28, 31.09, 1.01],
    [15.00, 1.10, 0.03, 18.00, 224161.95, 19.57, 9.72, 0.11, 0.83, 36.08, 1.05],
    [15.00, 2.30, 0.07, 18.00, 298882.6, 19.57, 6.61, 0.26, 0.21, 36.08, 1.03],
    [45.00, 43.00, 0.33, 18.00, 18576.35, 19.57, 3.58, 0.35, 4.98, 12.80, 1.02],
    [29.00, 1.00, 0.02, 19.29, 13256.00, 30.36, 0.35, 1.77, 3.49, 2.09, 1.00],
    [57.00, 6.50, 0.02, 16.26, 14638.00, 22.99, 0.81, 0.90, 0.93, 0.62, 1.00],
    [55.00, 62.00, 0.43, 16.92, 39114.00, 33.23, 3.63, 2.47, 1.80, 15.55, 1.02],
    [40.00, 1.00, 0.01, 18.95, 10417.00, 25.07, 13.91, 2.97, 5.15, 27.25, 1.07],
    [36.00, 12.00, 0.31, 14.70, 8164.00, 25.41, 9.59, 8.20, 0.55, 8.79, 1.05],
    [17.00, 2.00, 0.05, 18.54, 26052.00, 16.42, 2.53, 0.24, 1.46, 91.07, 1.01],
    [55.00, 55.50, 0.34, 16.92, 7539.00, 33.23, 2.95, 5.47, 2.31, 0.01, 1.01],
    [70.00, 592.00, 4.76, 16.67, 46963.00, 7.88, 14.84, 8.13, 0.29, 21.96, 1.07],
    [94.00, 216.00, 0.75, 21.27, 7055.00, 9.31, 25.23, 3.62, 0.22, 1.13, 1.13],
    [79.00, 110.00, 0.51, 17.40, 21502.00, 8.07, 3.86, 0.58, 1.26, 33.78, 1.02],
    [26.00, 3.00, 0.01, 15.56, 12471.00, 7.54, 11.30, 0.93, 3.30, 8.54, 1.06]
]

columns = [
    "dam_height", "dam_capacity", "reservoir_area", "temperature", "population",
    "rainfall", "nearest_conglo_residence", "farmland_distance", "nearest_road",
    "farmland_area", "location_penalty_factor"
]

# Create DataFrame
df = pd.DataFrame(data, columns=columns)

# Columns to normalize for cost estimation
features = ["dam_height", "reservoir_area", "location_penalty_factor", "farmland_distance", "rainfall"]
scaler = MinMaxScaler()
normalized = scaler.fit_transform(df[features])
normalized_df = pd.DataFrame(normalized, columns=features)

# Compute budget adjustment

alpha = 1 / len(features)
adjustment = (
    alpha * normalized_df["dam_height"] +
    alpha * normalized_df["reservoir_area"] +
    alpha * normalized_df["location_penalty_factor"] +
    alpha * normalized_df["farmland_distance"] +
    alpha * (1 - normalized_df["rainfall"])  # inverse relationship
)

df["budget"] = 150 * (1 + adjustment)
df[["dam_height", "reservoir_area", "location_penalty_factor", "farmland_distance", "rainfall", "budget"]]


